kind: ConfigMap
apiVersion: v1
metadata:
  name: nfs-svc-ip-script
  namespace: storage
data:
  nfs-svc-finder.sh: |
    #!/bin/sh
    oc login --token=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token) https://$KUBERNETES_SERVICE_HOST:$KUBERNETES_SERVICE_PORT --insecure-skip-tls-verify
    SVC_IP=$(oc get svc nfs-service -n storage -o yaml | grep 'clusterIP: 172' | awk {'print $2'})
    echo "Generating the demo pod manifest"
    cat <<EOF > ./nfs-demo-pv-pvc.yaml
    apiVersion: v1
    kind: PersistentVolume
    metadata:
      name: nfs-pv
      namespace: storage
      labels:
        app: nfs-demo
    spec:
      capacity:
        storage: 1Gi
      accessModes:
        - ReadWriteMany
      nfs:
        server: "${SVC_IP}"
        path: "/shared"
    ---
    apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: nfs-pvc
      namespace: storage
    spec:
      accessModes:
        - ReadWriteMany
      storageClassName: ""
      resources:
        requests:
          storage: 1Gi
      selector:
        matchLabels:
          app: nfs-demo
    EOF
    echo "Applying the file nfs-demo-pv-pvc.yaml"
    oc create -f ./nfs-demo-pv-pvc.yaml
    echo "File Applied"
    echo "waiting until job is completed"
    oc wait --for=condition=complete --timeout=30s job/nfs-svc-ip-job
    echo "Job Completed"
---
apiVersion: batch/v1
kind: Job
metadata:
  name: nfs-svc-ip-job
  namespace: storage
spec:
  parallelism: 1    
  completions: 1    
  activeDeadlineSeconds: 1800 
  backoffLimit: 6   
  template:         
    metadata:
      name: nfs-svc-ip-job
    spec:
      serviceAccount: nfs-server-sa
      serviceAccountName: nfs-server-sa
      volumes:
      - name: script
        configMap:
          name: nfs-svc-ip-script
      containers:
      - name: nfs-svc-finder
        image: quay.io/openshift/origin-cli:4.11
        volumeMounts:
          - name: script
            mountPath: /usr/nfs-svc-finder
        command:
        - /bin/sh
        - /usr/nfs-svc-finder/nfs-svc-finder.sh
        imagePullPolicy: IfNotPresent
      restartPolicy: OnFailure
---
kind: Pod
apiVersion: v1
metadata:
  name: nfs-demo-1
  namespace: storage
  labels:
    app: nfs-demo
spec:
  containers:
  - name: busybox
    image: busybox
    command:
    - sleep
    - "3600"
    volumeMounts:
    - name: nfs-data
      mountPath: /demo/data
  volumes:
  - name: nfs-data
    persistentVolumeClaim:
      claimName: nfs-pvc
---
kind: Pod
apiVersion: v1
metadata:
  name: nfs-demo-2
  namespace: storage
  labels:
    app: nfs-demo
spec:
  containers:
  - name: busybox
    image: busybox
    command:
    - sleep
    - "3600"
    volumeMounts:
    - name: nfs-data
      mountPath: /demo/data
  volumes:
  - name: nfs-data
    persistentVolumeClaim:
      claimName: nfs-pvc